//
// AccessTokenAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class AccessTokenAPI: APIBase {
    /**
     * enum for parameter grantType
     */
    public enum GrantType_getOAuthToken: String { 
        case ClientCredentials = "client_credentials"
        case Password = "password"
    }

    /**
     Get access token
     
     - parameter grantType: (form) Grant type 
     - parameter clientId: (form) The id of the client 
     - parameter clientSecret: (form) The secret key of the client.  Used only with a grant_type of client_credentials (optional)
     - parameter username: (form) The username of the client.  Used only with a grant_type of password (optional)
     - parameter password: (form) The password of the client.  Used only with a grant_type of password (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOAuthToken(grantType grantType: GrantType_getOAuthToken, clientId: String, clientSecret: String? = nil, username: String? = nil, password: String? = nil, completion: ((data: OAuth2Resource?, error: ErrorType?) -> Void)) {
        getOAuthTokenWithRequestBuilder(grantType: grantType, clientId: clientId, clientSecret: clientSecret, username: username, password: password).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get access token
     - POST /oauth/token
     - examples: [{contentType=application/json, example={
  "access_token" : "aeiou",
  "scope" : "aeiou",
  "token_type" : "aeiou",
  "expires_in" : "aeiou"
}}]
     
     - parameter grantType: (form) Grant type 
     - parameter clientId: (form) The id of the client 
     - parameter clientSecret: (form) The secret key of the client.  Used only with a grant_type of client_credentials (optional)
     - parameter username: (form) The username of the client.  Used only with a grant_type of password (optional)
     - parameter password: (form) The password of the client.  Used only with a grant_type of password (optional)

     - returns: RequestBuilder<OAuth2Resource> 
     */
    public class func getOAuthTokenWithRequestBuilder(grantType grantType: GrantType_getOAuthToken, clientId: String, clientSecret: String? = nil, username: String? = nil, password: String? = nil) -> RequestBuilder<OAuth2Resource> {
        let path = "/oauth/token"
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "grant_type": grantType.rawValue,
            "client_id": clientId,
            "client_secret": clientSecret,
            "username": username,
            "password": password
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<OAuth2Resource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
