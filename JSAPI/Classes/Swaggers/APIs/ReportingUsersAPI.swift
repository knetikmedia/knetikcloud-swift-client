//
// ReportingUsersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ReportingUsersAPI: APIBase {
    /**
     * enum for parameter granularity
     */
    public enum Granularity_getUserRegistrations: String { 
        case Millisecond = "millisecond"
        case Second = "second"
        case Minute = "minute"
        case Hour = "hour"
        case Day = "day"
        case Week = "week"
        case Month = "month"
        case Year = "year"
    }

    /**
     Get user registration info
     
     - parameter granularity: (query) The time duration to aggregate by (optional, default to day)
     - parameter startDate: (query) The start of the time range to aggregate, unix timestamp in seconds. Default is beginning of time (optional)
     - parameter endDate: (query) The end of the time range to aggregate, unix timestamp in seconds. Default is end of time (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getUserRegistrations(granularity granularity: Granularity_getUserRegistrations? = nil, startDate: Int64? = nil, endDate: Int64? = nil, completion: ((data: PageResourceAggregateCountResource?, error: ErrorType?) -> Void)) {
        getUserRegistrationsWithRequestBuilder(granularity: granularity, startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get user registration info
     - GET /reporting/users/registrations
     - Get user registration counts grouped by time range
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "number" : 3,
  "last" : true,
  "size" : 9,
  "total_elements" : 5,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "aeiou",
    "ascending" : true,
    "direction" : "ASC"
  } ],
  "total_pages" : 1,
  "number_of_elements" : 1,
  "content" : [ {
    "date" : "aeiou",
    "count" : 9
  } ],
  "first" : true
}}]
     
     - parameter granularity: (query) The time duration to aggregate by (optional, default to day)
     - parameter startDate: (query) The start of the time range to aggregate, unix timestamp in seconds. Default is beginning of time (optional)
     - parameter endDate: (query) The end of the time range to aggregate, unix timestamp in seconds. Default is end of time (optional)

     - returns: RequestBuilder<PageResourceAggregateCountResource> 
     */
    public class func getUserRegistrationsWithRequestBuilder(granularity granularity: Granularity_getUserRegistrations? = nil, startDate: Int64? = nil, endDate: Int64? = nil) -> RequestBuilder<PageResourceAggregateCountResource> {
        let path = "/reporting/users/registrations"
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "granularity": granularity?.rawValue,
            "start_date": startDate?.encodeToJSON(),
            "end_date": endDate?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceAggregateCountResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
