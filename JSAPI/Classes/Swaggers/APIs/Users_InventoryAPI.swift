//
// Users_InventoryAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class Users_InventoryAPI: APIBase {
    /**
     Adds an item to the user inventory
     
     - parameter id: (path) The id of the user 
     - parameter userInventoryAddRequest: (body) The user inventory add request object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addItemToUserInventory(id id: Int32, userInventoryAddRequest: UserInventoryAddRequest? = nil, completion: ((data: InvoiceResource?, error: ErrorType?) -> Void)) {
        addItemToUserInventoryWithRequestBuilder(id: id, userInventoryAddRequest: userInventoryAddRequest).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Adds an item to the user inventory
     - POST /users/{id}/inventory
     - The inventory is fulfilled asynchronously UNLESS the invoice is explicitely skipped. Depending on the use case, it might require the client to verify that the entitlement was added after the fact or configure a BRE rule to get a notification in real time. <br><br><b>Permissions Needed:</b> INVENTORY_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "shipping_city_name" : "shipping_city_name",
  "order_notes" : "order_notes",
  "parent_invoice_id" : 1,
  "discount" : 6.02745618307040320615897144307382404804229736328125,
  "state_tax" : 5.02500479152029466689555192715488374233245849609375,
  "cart_id" : "cart_id",
  "name_prefix" : "name_prefix",
  "billing_postal_code" : "billing_postal_code",
  "shipping" : 1.173074250955943309548956676735542714595794677734375,
  "billing_state_name" : "billing_state_name",
  "billing_country_name" : "billing_country_name",
  "currency" : "currency",
  "current_fulfillment_status" : "current_fulfillment_status",
  "grand_total" : 5.962133916683182377482808078639209270477294921875,
  "id" : 5,
  "current_payment_status" : "current_payment_status",
  "billing_address1" : "billing_address1",
  "invoice_number" : "invoice_number",
  "billing_address2" : "billing_address2",
  "email" : "email",
  "remaining_balance" : 7.4577447736837658709418974467553198337554931640625,
  "vendor_name" : "vendor_name",
  "billing_full_name" : "billing_full_name",
  "sort" : 4,
  "shipping_full_name" : "shipping_full_name",
  "fed_tax" : 1.46581298050294517310021547018550336360931396484375,
  "payment_method_id" : 6,
  "phone" : "phone",
  "external_ref" : "external_ref",
  "shipping_address2" : "shipping_address2",
  "subtotal" : 9.965781217890562260208753286860883235931396484375,
  "shipping_address1" : "shipping_address1",
  "vendor_id" : 6,
  "shipping_state_name" : "shipping_state_name",
  "billing_city_name" : "billing_city_name",
  "phone_number" : "phone_number",
  "created_date" : 0,
  "shipping_country_name" : "shipping_country_name",
  "updated_date" : 9,
  "items" : [ {
    "type_hint" : "type_hint",
    "total_price" : 1.231513536777255612975068288506008684635162353515625,
    "item_id" : 9,
    "system_price" : 7.3862819483858839220147274318151175975799560546875,
    "item_name" : "item_name",
    "original_unit_price" : 2.027123023002321833274663731572218239307403564453125,
    "unit_price" : 1.024645700144157789424070870154537260532379150390625,
    "qty" : 4,
    "invoice_id" : 7,
    "current_fulfillment_status" : "current_fulfillment_status",
    "id" : 2,
    "sale_name" : "sale_name",
    "bundle_sku" : "bundle_sku",
    "original_total_price" : 3.61607674925191080461672754609026014804840087890625,
    "sku" : "sku",
    "sku_description" : "sku_description"
  }, {
    "type_hint" : "type_hint",
    "total_price" : 1.231513536777255612975068288506008684635162353515625,
    "item_id" : 9,
    "system_price" : 7.3862819483858839220147274318151175975799560546875,
    "item_name" : "item_name",
    "original_unit_price" : 2.027123023002321833274663731572218239307403564453125,
    "unit_price" : 1.024645700144157789424070870154537260532379150390625,
    "qty" : 4,
    "invoice_id" : 7,
    "current_fulfillment_status" : "current_fulfillment_status",
    "id" : 2,
    "sale_name" : "sale_name",
    "bundle_sku" : "bundle_sku",
    "original_total_price" : 3.61607674925191080461672754609026014804840087890625,
    "sku" : "sku",
    "sku_description" : "sku_description"
  } ],
  "user" : {
    "avatar_url" : "avatar_url",
    "id" : 9,
    "display_name" : "display_name",
    "username" : "username"
  },
  "shipping_postal_code" : "shipping_postal_code"
}}]
     
     - parameter id: (path) The id of the user 
     - parameter userInventoryAddRequest: (body) The user inventory add request object (optional)

     - returns: RequestBuilder<InvoiceResource> 
     */
    public class func addItemToUserInventoryWithRequestBuilder(id id: Int32, userInventoryAddRequest: UserInventoryAddRequest? = nil) -> RequestBuilder<InvoiceResource> {
        var path = "/users/{id}/inventory"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters = userInventoryAddRequest?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InvoiceResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Check for access to an item without consuming
     
     - parameter userId: (path) The id of the user to check for or &#39;me&#39; for logged in user 
     - parameter itemId: (path) The id of the item 
     - parameter sku: (query) The specific sku of an entitlement list addition to check entitlement for. This is of very limited and specific use and should generally be left out (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func checkUserEntitlementItem(userId userId: String, itemId: Int32, sku: String? = nil, completion: ((error: ErrorType?) -> Void)) {
        checkUserEntitlementItemWithRequestBuilder(userId: userId, itemId: itemId, sku: sku).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Check for access to an item without consuming
     - GET /users/{userId}/entitlements/{itemId}/check
     - Useful for pre-check and accounts for all various buisness rules. <br><br><b>Permissions Needed:</b> INVENTORY_ADMIN or owner
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     
     - parameter userId: (path) The id of the user to check for or &#39;me&#39; for logged in user 
     - parameter itemId: (path) The id of the item 
     - parameter sku: (query) The specific sku of an entitlement list addition to check entitlement for. This is of very limited and specific use and should generally be left out (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func checkUserEntitlementItemWithRequestBuilder(userId userId: String, itemId: Int32, sku: String? = nil) -> RequestBuilder<Void> {
        var path = "/users/{userId}/entitlements/{itemId}/check"
        path = path.stringByReplacingOccurrencesOfString("{user_id}", withString: "\(userId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{item_id}", withString: "\(itemId)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "sku": sku
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Create an entitlement item
     
     - parameter cascade: (query) Whether to cascade group changes, such as in the limited gettable behavior. A 400 error will return otherwise if the group is already in use with different values. (optional, default to false)
     - parameter entitlementItem: (body) The entitlement item object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createEntitlementItem(cascade cascade: Bool? = nil, entitlementItem: EntitlementItem? = nil, completion: ((data: EntitlementItem?, error: ErrorType?) -> Void)) {
        createEntitlementItemWithRequestBuilder(cascade: cascade, entitlementItem: entitlementItem).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create an entitlement item
     - POST /entitlements
     - <b>Permissions Needed:</b> INVENTORY_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example=""}]
     
     - parameter cascade: (query) Whether to cascade group changes, such as in the limited gettable behavior. A 400 error will return otherwise if the group is already in use with different values. (optional, default to false)
     - parameter entitlementItem: (body) The entitlement item object (optional)

     - returns: RequestBuilder<EntitlementItem> 
     */
    public class func createEntitlementItemWithRequestBuilder(cascade cascade: Bool? = nil, entitlementItem: EntitlementItem? = nil) -> RequestBuilder<EntitlementItem> {
        let path = "/entitlements"
        let URLString = JSAPIAPI.basePath + path
        let parameters = entitlementItem?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<EntitlementItem>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Create an entitlement template
     
     - parameter template: (body) The entitlement template to be created (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createEntitlementTemplate(template template: ItemTemplateResource? = nil, completion: ((data: ItemTemplateResource?, error: ErrorType?) -> Void)) {
        createEntitlementTemplateWithRequestBuilder(template: template).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create an entitlement template
     - POST /entitlements/templates
     - Entitlement templates define a type of entitlement and the properties they have. <br><br><b>Permissions Needed:</b> TEMPLATE_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "allow_additional" : false,
  "behaviors" : [ {
    "behavior" : {
      "type_hint" : "type_hint",
      "description" : "description"
    },
    "modifiable" : false,
    "required" : false
  }, {
    "behavior" : {
      "type_hint" : "type_hint",
      "description" : "description"
    },
    "modifiable" : false,
    "required" : false
  } ],
  "name" : "name",
  "created_date" : 0,
  "id" : "id",
  "updated_date" : 6,
  "properties" : [ {
    "friendly_name" : "friendly_name",
    "option_value_path" : "path.to.value",
    "option_label_path" : "path.to.label",
    "name" : "name",
    "description" : "description",
    "options_url" : "options_url",
    "type" : "type",
    "field_list" : {
      "property_definition_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ],
      "property_type" : "property_type",
      "property_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ]
    },
    "required" : false
  }, {
    "friendly_name" : "friendly_name",
    "option_value_path" : "path.to.value",
    "option_label_path" : "path.to.label",
    "name" : "name",
    "description" : "description",
    "options_url" : "options_url",
    "type" : "type",
    "field_list" : {
      "property_definition_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ],
      "property_type" : "property_type",
      "property_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ]
    },
    "required" : false
  } ]
}}]
     
     - parameter template: (body) The entitlement template to be created (optional)

     - returns: RequestBuilder<ItemTemplateResource> 
     */
    public class func createEntitlementTemplateWithRequestBuilder(template template: ItemTemplateResource? = nil) -> RequestBuilder<ItemTemplateResource> {
        let path = "/entitlements/templates"
        let URLString = JSAPIAPI.basePath + path
        let parameters = template?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ItemTemplateResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete an entitlement item
     
     - parameter entitlementId: (path) The id of the entitlement 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteEntitlementItem(entitlementId entitlementId: Int32, completion: ((error: ErrorType?) -> Void)) {
        deleteEntitlementItemWithRequestBuilder(entitlementId: entitlementId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete an entitlement item
     - DELETE /entitlements/{entitlementId}
     - <b>Permissions Needed:</b> INVENTORY_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     
     - parameter entitlementId: (path) The id of the entitlement 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteEntitlementItemWithRequestBuilder(entitlementId entitlementId: Int32) -> RequestBuilder<Void> {
        var path = "/entitlements/{entitlementId}"
        path = path.stringByReplacingOccurrencesOfString("{entitlement_id}", withString: "\(entitlementId)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete an entitlement template
     
     - parameter id: (path) The id of the template 
     - parameter cascade: (query) The value needed to delete used templates (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteEntitlementTemplate(id id: String, cascade: String? = nil, completion: ((error: ErrorType?) -> Void)) {
        deleteEntitlementTemplateWithRequestBuilder(id: id, cascade: cascade).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete an entitlement template
     - DELETE /entitlements/templates/{id}
     - If cascade = 'detach', it will force delete the template even if it's attached to other objects. <br><br><b>Permissions Needed:</b> TEMPLATE_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     
     - parameter id: (path) The id of the template 
     - parameter cascade: (query) The value needed to delete used templates (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func deleteEntitlementTemplateWithRequestBuilder(id id: String, cascade: String? = nil) -> RequestBuilder<Void> {
        var path = "/entitlements/templates/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "cascade": cascade
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a single entitlement item
     
     - parameter entitlementId: (path) The id of the entitlement 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getEntitlementItem(entitlementId entitlementId: Int32, completion: ((data: EntitlementItem?, error: ErrorType?) -> Void)) {
        getEntitlementItemWithRequestBuilder(entitlementId: entitlementId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a single entitlement item
     - GET /entitlements/{entitlementId}
     - <b>Permissions Needed:</b> ANY
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example=""}]
     
     - parameter entitlementId: (path) The id of the entitlement 

     - returns: RequestBuilder<EntitlementItem> 
     */
    public class func getEntitlementItemWithRequestBuilder(entitlementId entitlementId: Int32) -> RequestBuilder<EntitlementItem> {
        var path = "/entitlements/{entitlementId}"
        path = path.stringByReplacingOccurrencesOfString("{entitlement_id}", withString: "\(entitlementId)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<EntitlementItem>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     List and search entitlement items
     
     - parameter filterTemplate: (query) Filter for entitlements using a specified template (optional)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getEntitlementItems(filterTemplate filterTemplate: String? = nil, size: Int32? = nil, page: Int32? = nil, order: String? = nil, completion: ((data: PageResourceEntitlementItem?, error: ErrorType?) -> Void)) {
        getEntitlementItemsWithRequestBuilder(filterTemplate: filterTemplate, size: size, page: page, order: order).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List and search entitlement items
     - GET /entitlements
     - <b>Permissions Needed:</b> ANY
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "number" : 0,
  "last" : true,
  "size" : 1,
  "total_elements" : 5,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  }, {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  } ],
  "total_pages" : 5,
  "number_of_elements" : 6,
  "content" : [ "", "" ],
  "first" : true
}}]
     
     - parameter filterTemplate: (query) Filter for entitlements using a specified template (optional)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)

     - returns: RequestBuilder<PageResourceEntitlementItem> 
     */
    public class func getEntitlementItemsWithRequestBuilder(filterTemplate filterTemplate: String? = nil, size: Int32? = nil, page: Int32? = nil, order: String? = nil) -> RequestBuilder<PageResourceEntitlementItem> {
        let path = "/entitlements"
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter_template": filterTemplate,
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON(),
            "order": order
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceEntitlementItem>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a single entitlement template
     
     - parameter id: (path) The id of the template 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getEntitlementTemplate(id id: String, completion: ((data: ItemTemplateResource?, error: ErrorType?) -> Void)) {
        getEntitlementTemplateWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a single entitlement template
     - GET /entitlements/templates/{id}
     - <b>Permissions Needed:</b> TEMPLATE_ADMIN or ACHIEVEMENTS_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "allow_additional" : false,
  "behaviors" : [ {
    "behavior" : {
      "type_hint" : "type_hint",
      "description" : "description"
    },
    "modifiable" : false,
    "required" : false
  }, {
    "behavior" : {
      "type_hint" : "type_hint",
      "description" : "description"
    },
    "modifiable" : false,
    "required" : false
  } ],
  "name" : "name",
  "created_date" : 0,
  "id" : "id",
  "updated_date" : 6,
  "properties" : [ {
    "friendly_name" : "friendly_name",
    "option_value_path" : "path.to.value",
    "option_label_path" : "path.to.label",
    "name" : "name",
    "description" : "description",
    "options_url" : "options_url",
    "type" : "type",
    "field_list" : {
      "property_definition_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ],
      "property_type" : "property_type",
      "property_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ]
    },
    "required" : false
  }, {
    "friendly_name" : "friendly_name",
    "option_value_path" : "path.to.value",
    "option_label_path" : "path.to.label",
    "name" : "name",
    "description" : "description",
    "options_url" : "options_url",
    "type" : "type",
    "field_list" : {
      "property_definition_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ],
      "property_type" : "property_type",
      "property_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ]
    },
    "required" : false
  } ]
}}]
     
     - parameter id: (path) The id of the template 

     - returns: RequestBuilder<ItemTemplateResource> 
     */
    public class func getEntitlementTemplateWithRequestBuilder(id id: String) -> RequestBuilder<ItemTemplateResource> {
        var path = "/entitlements/templates/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ItemTemplateResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     List and search entitlement templates
     
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getEntitlementTemplates(size size: Int32? = nil, page: Int32? = nil, order: String? = nil, completion: ((data: PageResourceItemTemplateResource?, error: ErrorType?) -> Void)) {
        getEntitlementTemplatesWithRequestBuilder(size: size, page: page, order: order).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List and search entitlement templates
     - GET /entitlements/templates
     - <b>Permissions Needed:</b> TEMPLATE_ADMIN or ACHIEVEMENTS_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "number" : 1,
  "last" : true,
  "size" : 5,
  "total_elements" : 2,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  }, {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  } ],
  "total_pages" : 7,
  "number_of_elements" : 5,
  "content" : [ {
    "allow_additional" : false,
    "behaviors" : [ {
      "behavior" : {
        "type_hint" : "type_hint",
        "description" : "description"
      },
      "modifiable" : false,
      "required" : false
    }, {
      "behavior" : {
        "type_hint" : "type_hint",
        "description" : "description"
      },
      "modifiable" : false,
      "required" : false
    } ],
    "name" : "name",
    "created_date" : 0,
    "id" : "id",
    "updated_date" : 6,
    "properties" : [ {
      "friendly_name" : "friendly_name",
      "option_value_path" : "path.to.value",
      "option_label_path" : "path.to.label",
      "name" : "name",
      "description" : "description",
      "options_url" : "options_url",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    }, {
      "friendly_name" : "friendly_name",
      "option_value_path" : "path.to.value",
      "option_label_path" : "path.to.label",
      "name" : "name",
      "description" : "description",
      "options_url" : "options_url",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    } ]
  }, {
    "allow_additional" : false,
    "behaviors" : [ {
      "behavior" : {
        "type_hint" : "type_hint",
        "description" : "description"
      },
      "modifiable" : false,
      "required" : false
    }, {
      "behavior" : {
        "type_hint" : "type_hint",
        "description" : "description"
      },
      "modifiable" : false,
      "required" : false
    } ],
    "name" : "name",
    "created_date" : 0,
    "id" : "id",
    "updated_date" : 6,
    "properties" : [ {
      "friendly_name" : "friendly_name",
      "option_value_path" : "path.to.value",
      "option_label_path" : "path.to.label",
      "name" : "name",
      "description" : "description",
      "options_url" : "options_url",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    }, {
      "friendly_name" : "friendly_name",
      "option_value_path" : "path.to.value",
      "option_label_path" : "path.to.label",
      "name" : "name",
      "description" : "description",
      "options_url" : "options_url",
      "type" : "type",
      "field_list" : {
        "property_definition_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ],
        "property_type" : "property_type",
        "property_fields" : [ {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        }, {
          "inner_type" : "integer",
          "valid_values" : [ "valid_values", "valid_values" ],
          "name" : "name",
          "description" : "description",
          "type" : "integer",
          "inner_type_fields" : [ null, null ],
          "required" : false
        } ]
      },
      "required" : false
    } ]
  } ],
  "first" : true
}}]
     
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)

     - returns: RequestBuilder<PageResourceItemTemplateResource> 
     */
    public class func getEntitlementTemplatesWithRequestBuilder(size size: Int32? = nil, page: Int32? = nil, order: String? = nil) -> RequestBuilder<PageResourceItemTemplateResource> {
        let path = "/entitlements/templates"
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON(),
            "order": order
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceItemTemplateResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     List the user inventory entries for a given user
     
     - parameter id: (path) The id of the user 
     - parameter inactive: (query) If true, accepts inactive user inventories (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter filterItemName: (query) Filter by items whose name starts with a string (optional)
     - parameter filterItemId: (query) Filter by item id (optional)
     - parameter filterUsername: (query) Filter by entries owned by the user with the specified username (optional)
     - parameter filterGroup: (query) Filter by entries owned by the users in a given group, by unique name (optional)
     - parameter filterDate: (query) A comma separated string without spaces.  First value is the operator to search on, second value is the log start date, a unix timestamp in seconds. Can be repeated for a range, eg: GT,123,LT,456  Allowed operators: (GT, LT, EQ, GOE, LOE). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getUserInventories(id id: Int32, inactive: Bool? = nil, size: Int32? = nil, page: Int32? = nil, filterItemName: String? = nil, filterItemId: Int32? = nil, filterUsername: String? = nil, filterGroup: String? = nil, filterDate: String? = nil, completion: ((data: PageResourceUserInventoryResource?, error: ErrorType?) -> Void)) {
        getUserInventoriesWithRequestBuilder(id: id, inactive: inactive, size: size, page: page, filterItemName: filterItemName, filterItemId: filterItemId, filterUsername: filterUsername, filterGroup: filterGroup, filterDate: filterDate).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List the user inventory entries for a given user
     - GET /users/{id}/inventory
     - <b>Permissions Needed:</b> INVENTORY_ADMIN or owner
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "number" : 7,
  "last" : true,
  "size" : 3,
  "total_elements" : 2,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  }, {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  } ],
  "total_pages" : 4,
  "number_of_elements" : 9,
  "content" : [ {
    "behavior_data" : "{}",
    "expires" : 6,
    "item_id" : 5,
    "invoice_id" : 5,
    "item_name" : "item_name",
    "created_date" : 0,
    "id" : 1,
    "updated_date" : 2,
    "item_type_hint" : "item_type_hint",
    "user" : {
      "avatar_url" : "avatar_url",
      "id" : 9,
      "display_name" : "display_name",
      "username" : "username"
    },
    "status" : "pending"
  }, {
    "behavior_data" : "{}",
    "expires" : 6,
    "item_id" : 5,
    "invoice_id" : 5,
    "item_name" : "item_name",
    "created_date" : 0,
    "id" : 1,
    "updated_date" : 2,
    "item_type_hint" : "item_type_hint",
    "user" : {
      "avatar_url" : "avatar_url",
      "id" : 9,
      "display_name" : "display_name",
      "username" : "username"
    },
    "status" : "pending"
  } ],
  "first" : true
}}]
     
     - parameter id: (path) The id of the user 
     - parameter inactive: (query) If true, accepts inactive user inventories (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter filterItemName: (query) Filter by items whose name starts with a string (optional)
     - parameter filterItemId: (query) Filter by item id (optional)
     - parameter filterUsername: (query) Filter by entries owned by the user with the specified username (optional)
     - parameter filterGroup: (query) Filter by entries owned by the users in a given group, by unique name (optional)
     - parameter filterDate: (query) A comma separated string without spaces.  First value is the operator to search on, second value is the log start date, a unix timestamp in seconds. Can be repeated for a range, eg: GT,123,LT,456  Allowed operators: (GT, LT, EQ, GOE, LOE). (optional)

     - returns: RequestBuilder<PageResourceUserInventoryResource> 
     */
    public class func getUserInventoriesWithRequestBuilder(id id: Int32, inactive: Bool? = nil, size: Int32? = nil, page: Int32? = nil, filterItemName: String? = nil, filterItemId: Int32? = nil, filterUsername: String? = nil, filterGroup: String? = nil, filterDate: String? = nil) -> RequestBuilder<PageResourceUserInventoryResource> {
        var path = "/users/{id}/inventory"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "inactive": inactive,
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON(),
            "filter_item_name": filterItemName,
            "filter_item_id": filterItemId?.encodeToJSON(),
            "filter_username": filterUsername,
            "filter_group": filterGroup,
            "filter_date": filterDate
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceUserInventoryResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get an inventory entry
     
     - parameter userId: (path) The id of the inventory owner or &#39;me&#39; for the logged in user 
     - parameter id: (path) The id of the user inventory 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getUserInventory(userId userId: String, id: Int32, completion: ((data: UserInventoryResource?, error: ErrorType?) -> Void)) {
        getUserInventoryWithRequestBuilder(userId: userId, id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get an inventory entry
     - GET /users/{userId}/inventory/{id}
     - <b>Permissions Needed:</b> INVENTORY_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "behavior_data" : "{}",
  "expires" : 6,
  "item_id" : 5,
  "invoice_id" : 5,
  "item_name" : "item_name",
  "created_date" : 0,
  "id" : 1,
  "updated_date" : 2,
  "item_type_hint" : "item_type_hint",
  "user" : {
    "avatar_url" : "avatar_url",
    "id" : 9,
    "display_name" : "display_name",
    "username" : "username"
  },
  "status" : "pending"
}}]
     
     - parameter userId: (path) The id of the inventory owner or &#39;me&#39; for the logged in user 
     - parameter id: (path) The id of the user inventory 

     - returns: RequestBuilder<UserInventoryResource> 
     */
    public class func getUserInventoryWithRequestBuilder(userId userId: String, id: Int32) -> RequestBuilder<UserInventoryResource> {
        var path = "/users/{userId}/inventory/{id}"
        path = path.stringByReplacingOccurrencesOfString("{user_id}", withString: "\(userId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<UserInventoryResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     List the log entries for this inventory entry
     
     - parameter userId: (path) The id of the inventory owner or &#39;me&#39; for the logged in user 
     - parameter id: (path) The id of the user inventory 
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getUserInventoryLog(userId userId: String, id: Int32, size: Int32? = nil, page: Int32? = nil, completion: ((data: PageResourceUserItemLogResource?, error: ErrorType?) -> Void)) {
        getUserInventoryLogWithRequestBuilder(userId: userId, id: id, size: size, page: page).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List the log entries for this inventory entry
     - GET /users/{userId}/inventory/{id}/log
     - <b>Permissions Needed:</b> INVENTORY_ADMIN or owner
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "number" : 5,
  "last" : true,
  "size" : 2,
  "total_elements" : 7,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  }, {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  } ],
  "total_pages" : 9,
  "number_of_elements" : 5,
  "content" : [ {
    "item" : {
      "name" : "name",
      "id" : 5
    },
    "log_date" : 6,
    "id" : 0,
    "type" : "type",
    "user" : {
      "avatar_url" : "avatar_url",
      "id" : 9,
      "display_name" : "display_name",
      "username" : "username"
    },
    "info" : "info",
    "user_inventory" : 1
  }, {
    "item" : {
      "name" : "name",
      "id" : 5
    },
    "log_date" : 6,
    "id" : 0,
    "type" : "type",
    "user" : {
      "avatar_url" : "avatar_url",
      "id" : 9,
      "display_name" : "display_name",
      "username" : "username"
    },
    "info" : "info",
    "user_inventory" : 1
  } ],
  "first" : true
}}]
     
     - parameter userId: (path) The id of the inventory owner or &#39;me&#39; for the logged in user 
     - parameter id: (path) The id of the user inventory 
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)

     - returns: RequestBuilder<PageResourceUserItemLogResource> 
     */
    public class func getUserInventoryLogWithRequestBuilder(userId userId: String, id: Int32, size: Int32? = nil, page: Int32? = nil) -> RequestBuilder<PageResourceUserItemLogResource> {
        var path = "/users/{userId}/inventory/{id}/log"
        path = path.stringByReplacingOccurrencesOfString("{user_id}", withString: "\(userId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceUserItemLogResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     List the user inventory entries for all users
     
     - parameter inactive: (query) If true, accepts inactive user inventories (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter filterItemName: (query) Filter by items whose name starts with a string (optional)
     - parameter filterItemId: (query) Filter by item id (optional)
     - parameter filterUsername: (query) Filter by entries owned by the user with the specified username (optional)
     - parameter filterGroup: (query) Filter by entries owned by the users in a given group, by unique name (optional)
     - parameter filterDate: (query) A comma separated string without spaces.  First value is the operator to search on, second value is the log start date, a unix timestamp in seconds. Can be repeated for a range, eg: GT,123,LT,456  Allowed operators: (GT, LT, EQ, GOE, LOE). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getUsersInventory(inactive inactive: Bool? = nil, size: Int32? = nil, page: Int32? = nil, filterItemName: String? = nil, filterItemId: Int32? = nil, filterUsername: String? = nil, filterGroup: String? = nil, filterDate: String? = nil, completion: ((data: PageResourceUserInventoryResource?, error: ErrorType?) -> Void)) {
        getUsersInventoryWithRequestBuilder(inactive: inactive, size: size, page: page, filterItemName: filterItemName, filterItemId: filterItemId, filterUsername: filterUsername, filterGroup: filterGroup, filterDate: filterDate).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List the user inventory entries for all users
     - GET /inventories
     - <b>Permissions Needed:</b> INVENTORY_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "number" : 7,
  "last" : true,
  "size" : 3,
  "total_elements" : 2,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  }, {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "property",
    "ascending" : true,
    "descending" : true,
    "direction" : "ASC"
  } ],
  "total_pages" : 4,
  "number_of_elements" : 9,
  "content" : [ {
    "behavior_data" : "{}",
    "expires" : 6,
    "item_id" : 5,
    "invoice_id" : 5,
    "item_name" : "item_name",
    "created_date" : 0,
    "id" : 1,
    "updated_date" : 2,
    "item_type_hint" : "item_type_hint",
    "user" : {
      "avatar_url" : "avatar_url",
      "id" : 9,
      "display_name" : "display_name",
      "username" : "username"
    },
    "status" : "pending"
  }, {
    "behavior_data" : "{}",
    "expires" : 6,
    "item_id" : 5,
    "invoice_id" : 5,
    "item_name" : "item_name",
    "created_date" : 0,
    "id" : 1,
    "updated_date" : 2,
    "item_type_hint" : "item_type_hint",
    "user" : {
      "avatar_url" : "avatar_url",
      "id" : 9,
      "display_name" : "display_name",
      "username" : "username"
    },
    "status" : "pending"
  } ],
  "first" : true
}}]
     
     - parameter inactive: (query) If true, accepts inactive user inventories (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter filterItemName: (query) Filter by items whose name starts with a string (optional)
     - parameter filterItemId: (query) Filter by item id (optional)
     - parameter filterUsername: (query) Filter by entries owned by the user with the specified username (optional)
     - parameter filterGroup: (query) Filter by entries owned by the users in a given group, by unique name (optional)
     - parameter filterDate: (query) A comma separated string without spaces.  First value is the operator to search on, second value is the log start date, a unix timestamp in seconds. Can be repeated for a range, eg: GT,123,LT,456  Allowed operators: (GT, LT, EQ, GOE, LOE). (optional)

     - returns: RequestBuilder<PageResourceUserInventoryResource> 
     */
    public class func getUsersInventoryWithRequestBuilder(inactive inactive: Bool? = nil, size: Int32? = nil, page: Int32? = nil, filterItemName: String? = nil, filterItemId: Int32? = nil, filterUsername: String? = nil, filterGroup: String? = nil, filterDate: String? = nil) -> RequestBuilder<PageResourceUserInventoryResource> {
        let path = "/inventories"
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "inactive": inactive,
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON(),
            "filter_item_name": filterItemName,
            "filter_item_id": filterItemId?.encodeToJSON(),
            "filter_username": filterUsername,
            "filter_group": filterGroup,
            "filter_date": filterDate
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceUserInventoryResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Grant an entitlement
     
     - parameter userId: (path) The id of the user to grant the entitlement to 
     - parameter grantRequest: (body) grantRequest 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func grantUserEntitlement(userId userId: Int32, grantRequest: EntitlementGrantRequest, completion: ((error: ErrorType?) -> Void)) {
        grantUserEntitlementWithRequestBuilder(userId: userId, grantRequest: grantRequest).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Grant an entitlement
     - POST /users/{userId}/entitlements
     - <b>Permissions Needed:</b> INVENTORY_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     
     - parameter userId: (path) The id of the user to grant the entitlement to 
     - parameter grantRequest: (body) grantRequest 

     - returns: RequestBuilder<Void> 
     */
    public class func grantUserEntitlementWithRequestBuilder(userId userId: Int32, grantRequest: EntitlementGrantRequest) -> RequestBuilder<Void> {
        var path = "/users/{userId}/entitlements"
        path = path.stringByReplacingOccurrencesOfString("{user_id}", withString: "\(userId)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters = grantRequest.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update an entitlement item
     
     - parameter entitlementId: (path) The id of the entitlement 
     - parameter cascade: (query) Whether to cascade group changes, such as in the limited gettable behavior. A 400 error will return otherwise if the group is already in use with different values. (optional, default to false)
     - parameter entitlementItem: (body) The entitlement item object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateEntitlementItem(entitlementId entitlementId: Int32, cascade: Bool? = nil, entitlementItem: EntitlementItem? = nil, completion: ((error: ErrorType?) -> Void)) {
        updateEntitlementItemWithRequestBuilder(entitlementId: entitlementId, cascade: cascade, entitlementItem: entitlementItem).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Update an entitlement item
     - PUT /entitlements/{entitlementId}
     - <b>Permissions Needed:</b> INVENTORY_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     
     - parameter entitlementId: (path) The id of the entitlement 
     - parameter cascade: (query) Whether to cascade group changes, such as in the limited gettable behavior. A 400 error will return otherwise if the group is already in use with different values. (optional, default to false)
     - parameter entitlementItem: (body) The entitlement item object (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func updateEntitlementItemWithRequestBuilder(entitlementId entitlementId: Int32, cascade: Bool? = nil, entitlementItem: EntitlementItem? = nil) -> RequestBuilder<Void> {
        var path = "/entitlements/{entitlementId}"
        path = path.stringByReplacingOccurrencesOfString("{entitlement_id}", withString: "\(entitlementId)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters = entitlementItem?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Update an entitlement template
     
     - parameter id: (path) The id of the template 
     - parameter template: (body) The updated template (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateEntitlementTemplate(id id: String, template: ItemTemplateResource? = nil, completion: ((data: ItemTemplateResource?, error: ErrorType?) -> Void)) {
        updateEntitlementTemplateWithRequestBuilder(id: id, template: template).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update an entitlement template
     - PUT /entitlements/templates/{id}
     - <b>Permissions Needed:</b> TEMPLATE_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     - examples: [{contentType=application/json, example={
  "allow_additional" : false,
  "behaviors" : [ {
    "behavior" : {
      "type_hint" : "type_hint",
      "description" : "description"
    },
    "modifiable" : false,
    "required" : false
  }, {
    "behavior" : {
      "type_hint" : "type_hint",
      "description" : "description"
    },
    "modifiable" : false,
    "required" : false
  } ],
  "name" : "name",
  "created_date" : 0,
  "id" : "id",
  "updated_date" : 6,
  "properties" : [ {
    "friendly_name" : "friendly_name",
    "option_value_path" : "path.to.value",
    "option_label_path" : "path.to.label",
    "name" : "name",
    "description" : "description",
    "options_url" : "options_url",
    "type" : "type",
    "field_list" : {
      "property_definition_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ],
      "property_type" : "property_type",
      "property_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ]
    },
    "required" : false
  }, {
    "friendly_name" : "friendly_name",
    "option_value_path" : "path.to.value",
    "option_label_path" : "path.to.label",
    "name" : "name",
    "description" : "description",
    "options_url" : "options_url",
    "type" : "type",
    "field_list" : {
      "property_definition_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ],
      "property_type" : "property_type",
      "property_fields" : [ {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      }, {
        "inner_type" : "integer",
        "valid_values" : [ "valid_values", "valid_values" ],
        "name" : "name",
        "description" : "description",
        "type" : "integer",
        "inner_type_fields" : [ null, null ],
        "required" : false
      } ]
    },
    "required" : false
  } ]
}}]
     
     - parameter id: (path) The id of the template 
     - parameter template: (body) The updated template (optional)

     - returns: RequestBuilder<ItemTemplateResource> 
     */
    public class func updateEntitlementTemplateWithRequestBuilder(id id: String, template: ItemTemplateResource? = nil) -> RequestBuilder<ItemTemplateResource> {
        var path = "/entitlements/templates/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters = template?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ItemTemplateResource>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Set the behavior data for an inventory entry
     
     - parameter userId: (path) The id of the user 
     - parameter id: (path) The id of the user inventory 
     - parameter data: (body) The data map (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateUserInventoryBehaviorData(userId userId: Int32, id: Int32, data: AnyObject? = nil, completion: ((error: ErrorType?) -> Void)) {
        updateUserInventoryBehaviorDataWithRequestBuilder(userId: userId, id: id, data: data).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Set the behavior data for an inventory entry
     - PUT /users/{userId}/inventory/{id}/behavior-data
     - <b>Permissions Needed:</b> INVENTORY_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     
     - parameter userId: (path) The id of the user 
     - parameter id: (path) The id of the user inventory 
     - parameter data: (body) The data map (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func updateUserInventoryBehaviorDataWithRequestBuilder(userId userId: Int32, id: Int32, data: AnyObject? = nil) -> RequestBuilder<Void> {
        var path = "/users/{userId}/inventory/{id}/behavior-data"
        path = path.stringByReplacingOccurrencesOfString("{user_id}", withString: "\(userId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Set the expiration date
     
     - parameter userId: (path) user_id 
     - parameter id: (path) The id of the user inventory 
     - parameter timestamp: (body) The new expiration date as a unix timestamp in seconds. May be null (no body). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateUserInventoryExpires(userId userId: Int32, id: Int32, timestamp: Int64? = nil, completion: ((error: ErrorType?) -> Void)) {
        updateUserInventoryExpiresWithRequestBuilder(userId: userId, id: id, timestamp: timestamp).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Set the expiration date
     - PUT /users/{userId}/inventory/{id}/expires
     - Will change the current grace period for a subscription but not the bill date (possibly even ending before having the chance to re-bill). <br><br><b>Permissions Needed:</b> INVENTORY_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     
     - parameter userId: (path) user_id 
     - parameter id: (path) The id of the user inventory 
     - parameter timestamp: (body) The new expiration date as a unix timestamp in seconds. May be null (no body). (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func updateUserInventoryExpiresWithRequestBuilder(userId userId: Int32, id: Int32, timestamp: Int64? = nil) -> RequestBuilder<Void> {
        var path = "/users/{userId}/inventory/{id}/expires"
        path = path.stringByReplacingOccurrencesOfString("{user_id}", withString: "\(userId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters = timestamp?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Set the status for an inventory entry
     
     - parameter userId: (path) The id of the user 
     - parameter id: (path) The id of the user inventory 
     - parameter inventoryStatus: (body) The inventory status object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateUserInventoryStatus(userId userId: Int32, id: Int32, inventoryStatus: InventoryStatusWrapper? = nil, completion: ((error: ErrorType?) -> Void)) {
        updateUserInventoryStatusWithRequestBuilder(userId: userId, id: id, inventoryStatus: inventoryStatus).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Set the status for an inventory entry
     - PUT /users/{userId}/inventory/{id}/status
     - <b>Permissions Needed:</b> INVENTORY_ADMIN
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     
     - parameter userId: (path) The id of the user 
     - parameter id: (path) The id of the user inventory 
     - parameter inventoryStatus: (body) The inventory status object (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func updateUserInventoryStatusWithRequestBuilder(userId userId: Int32, id: Int32, inventoryStatus: InventoryStatusWrapper? = nil) -> RequestBuilder<Void> {
        var path = "/users/{userId}/inventory/{id}/status"
        path = path.stringByReplacingOccurrencesOfString("{user_id}", withString: "\(userId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path
        let parameters = inventoryStatus?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Use an item
     
     - parameter userId: (path) The id of the user to check for or &#39;me&#39; for logged in user 
     - parameter itemId: (path) The id of the item 
     - parameter sku: (query) The specific sku of an entitlement_list addition to check entitlement for. This is of very limited and specific use and should generally be left out (optional)
     - parameter info: (query) Any additional info to add to the log about this use (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func useUserEntitlementItem(userId userId: String, itemId: Int32, sku: String? = nil, info: String? = nil, completion: ((error: ErrorType?) -> Void)) {
        useUserEntitlementItemWithRequestBuilder(userId: userId, itemId: itemId, sku: sku, info: info).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Use an item
     - POST /users/{userId}/entitlements/{itemId}/use
     - <b>Permissions Needed:</b> INVENTORY_ADMIN or owner
     - OAuth:
       - type: oauth2
       - name: oauth2_client_credentials_grant
     - OAuth:
       - type: oauth2
       - name: oauth2_password_grant
     
     - parameter userId: (path) The id of the user to check for or &#39;me&#39; for logged in user 
     - parameter itemId: (path) The id of the item 
     - parameter sku: (query) The specific sku of an entitlement_list addition to check entitlement for. This is of very limited and specific use and should generally be left out (optional)
     - parameter info: (query) Any additional info to add to the log about this use (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func useUserEntitlementItemWithRequestBuilder(userId userId: String, itemId: Int32, sku: String? = nil, info: String? = nil) -> RequestBuilder<Void> {
        var path = "/users/{userId}/entitlements/{itemId}/use"
        path = path.stringByReplacingOccurrencesOfString("{user_id}", withString: "\(userId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{item_id}", withString: "\(itemId)", options: .LiteralSearch, range: nil)
        let URLString = JSAPIAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "sku": sku,
            "info": info
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = JSAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
