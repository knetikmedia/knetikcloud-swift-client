//
// BRERuleEngineActionsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class BRERuleEngineActionsAPI: APIBase {
    /**
     * enum for parameter filterCategory
     */
    public enum FilterCategory_getActionsUsingGET: String { 
        case Achievement = "achievement"
        case Behavior = "behavior"
        case Comment = "comment"
        case Disposition = "disposition"
        case Entitlement = "entitlement"
        case Friends = "friends"
        case Fulfillment = "fulfillment"
        case Gamification = "gamification"
        case Inventory = "inventory"
        case Invoice = "invoice"
        case Media = "media"
        case Scheduler = "scheduler"
        case Store = "store"
        case Subscription = "subscription"
        case User = "user"
        case Wallet = "wallet"
        case Custom = "custom"
        case Challenge = "challenge"
        case Activity = "activity"
        case Campaign = "campaign"
        case Event = "event"
    }

    /**
     Get a list of available actions
     
     - parameter filterCategory: (query) Filter for actions that are within a specific category (optional)
     - parameter filterName: (query) Filter for actions that have names containing the given string (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getActionsUsingGET(filterCategory filterCategory: FilterCategory_getActionsUsingGET? = nil, filterName: String? = nil, completion: ((data: [ActionResource]?, error: ErrorType?) -> Void)) {
        getActionsUsingGETWithRequestBuilder(filterCategory: filterCategory, filterName: filterName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of available actions
     - GET /bre/actions
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example=[ {
  "variables" : [ {
    "name" : "aeiou",
    "optional" : false,
    "type" : "aeiou"
  } ],
  "name" : "aeiou",
  "description" : "aeiou",
  "category" : "aeiou"
} ]}]
     
     - parameter filterCategory: (query) Filter for actions that are within a specific category (optional)
     - parameter filterName: (query) Filter for actions that have names containing the given string (optional)

     - returns: RequestBuilder<[ActionResource]> 
     */
    public class func getActionsUsingGETWithRequestBuilder(filterCategory filterCategory: FilterCategory_getActionsUsingGET? = nil, filterName: String? = nil) -> RequestBuilder<[ActionResource]> {
        let path = "/bre/actions"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter_category": filterCategory?.rawValue,
            "filter_name": filterName
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[ActionResource]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
