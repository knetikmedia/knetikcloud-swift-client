//
// LocationsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class LocationsAPI: APIBase {
    /**
     Get a list of a state's cities
     
     - parameter countryCodeIso3: (path) The iso3 code of the country 
     - parameter stateCode: (path) The code of the state 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCities(countryCodeIso3 countryCodeIso3: String, stateCode: String, completion: ((data: [CityResource]?, error: ErrorType?) -> Void)) {
        getCitiesWithRequestBuilder(countryCodeIso3: countryCodeIso3, stateCode: stateCode).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of a state's cities
     - GET /location/countries/{country_code_iso3}/states/{stateCode}/cities
     - examples: [{contentType=application/json, example=[ {
  "country_code_iso3" : "aeiou",
  "name" : "aeiou",
  "id" : 123,
  "state_code" : "aeiou"
} ]}]
     
     - parameter countryCodeIso3: (path) The iso3 code of the country 
     - parameter stateCode: (path) The code of the state 

     - returns: RequestBuilder<[CityResource]> 
     */
    public class func getCitiesWithRequestBuilder(countryCodeIso3 countryCodeIso3: String, stateCode: String) -> RequestBuilder<[CityResource]> {
        var path = "/location/countries/{country_code_iso3}/states/{stateCode}/cities"
        path = path.stringByReplacingOccurrencesOfString("{country_code_iso3}", withString: "\(countryCodeIso3)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{state_code}", withString: "\(stateCode)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[CityResource]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a list of countries
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCountries1(completion: ((data: [CountryResource]?, error: ErrorType?) -> Void)) {
        getCountries1WithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of countries
     - GET /location/countries
     - examples: [{contentType=application/json, example=[ {
  "name" : "aeiou",
  "iso2" : "aeiou",
  "iso3" : "aeiou"
} ]}]

     - returns: RequestBuilder<[CountryResource]> 
     */
    public class func getCountries1WithRequestBuilder() -> RequestBuilder<[CountryResource]> {
        let path = "/location/countries"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[CountryResource]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a list of a country's states
     
     - parameter countryCodeIso3: (path) The iso3 code of the country 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCountries2(countryCodeIso3 countryCodeIso3: String, completion: ((data: [StateResource]?, error: ErrorType?) -> Void)) {
        getCountries2WithRequestBuilder(countryCodeIso3: countryCodeIso3).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of a country's states
     - GET /location/countries/{country_code_iso3}/states
     - examples: [{contentType=application/json, example=[ {
  "country_code_iso3" : "aeiou",
  "code" : "aeiou",
  "name" : "aeiou",
  "id" : 123
} ]}]
     
     - parameter countryCodeIso3: (path) The iso3 code of the country 

     - returns: RequestBuilder<[StateResource]> 
     */
    public class func getCountries2WithRequestBuilder(countryCodeIso3 countryCodeIso3: String) -> RequestBuilder<[StateResource]> {
        var path = "/location/countries/{country_code_iso3}/states"
        path = path.stringByReplacingOccurrencesOfString("{country_code_iso3}", withString: "\(countryCodeIso3)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[StateResource]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the iso3 code of your country
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCountryByGeoLocation(completion: ((data: String?, error: ErrorType?) -> Void)) {
        getCountryByGeoLocationWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the iso3 code of your country
     - GET /location/geolocation/country
     - Determined by geo ip location
     - examples: [{contentType=application/json, example="aeiou"}]

     - returns: RequestBuilder<String> 
     */
    public class func getCountryByGeoLocationWithRequestBuilder() -> RequestBuilder<String> {
        let path = "/location/geolocation/country"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get the currency information of your country
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getCurrencyByGeoLocation(completion: ((data: CurrencyResource?, error: ErrorType?) -> Void)) {
        getCurrencyByGeoLocationWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get the currency information of your country
     - GET /location/geolocation/currency
     - Determined by geo ip location, currency to country mapping and a fallback setting
     - examples: [{contentType=application/json, example={
  "code" : "aeiou",
  "icon" : "aeiou",
  "name" : "aeiou",
  "active" : false,
  "created_date" : 123456789,
  "updated_date" : 123456789,
  "factor" : 1.3579000000000001069366817318950779736042022705078125,
  "type" : "aeiou"
}}]

     - returns: RequestBuilder<CurrencyResource> 
     */
    public class func getCurrencyByGeoLocationWithRequestBuilder() -> RequestBuilder<CurrencyResource> {
        let path = "/location/geolocation/currency"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<CurrencyResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
