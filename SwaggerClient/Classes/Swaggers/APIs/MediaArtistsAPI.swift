//
// MediaArtistsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class MediaArtistsAPI: APIBase {
    /**
     Adds a new artist in the system
     
     - parameter artistResource: (body) The new artist (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func addArtist(artistResource artistResource: ArtistResource? = nil, completion: ((data: ArtistResource?, error: ErrorType?) -> Void)) {
        addArtistWithRequestBuilder(artistResource: artistResource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Adds a new artist in the system
     - POST /media/artists
     - Adds a new artist in the system. Use specific media contributions endpoint to add contributions
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "contribution_count" : 7,
  "template" : "aeiou",
  "short_description" : "aeiou",
  "born" : "aeiou",
  "died" : "aeiou",
  "long_description" : "aeiou",
  "priority" : 1,
  "contributions" : [ {
    "role" : "aeiou",
    "artist" : {
      "name" : "aeiou",
      "id" : 2
    },
    "media" : ""
  } ],
  "name" : "aeiou",
  "additional_properties" : {
    "key" : {
      "type" : "aeiou"
    }
  },
  "created_date" : 3,
  "id" : 2,
  "updated_date" : 8
}}]
     
     - parameter artistResource: (body) The new artist (optional)

     - returns: RequestBuilder<ArtistResource> 
     */
    public class func addArtistWithRequestBuilder(artistResource artistResource: ArtistResource? = nil) -> RequestBuilder<ArtistResource> {
        let path = "/media/artists"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = artistResource?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ArtistResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create an artist template
     
     - parameter artistTemplateResource: (body) The artist template resource object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createArtistTemplate(artistTemplateResource artistTemplateResource: TemplateResource? = nil, completion: ((data: TemplateResource?, error: ErrorType?) -> Void)) {
        createArtistTemplateWithRequestBuilder(artistTemplateResource: artistTemplateResource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create an artist template
     - POST /media/artists/templates
     - Artist Templates define a type of artist and the properties they have
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "created_date" : 7,
  "id" : "aeiou",
  "updated_date" : 8,
  "properties" : [ {
    "name" : "aeiou",
    "type" : "aeiou",
    "required" : false
  } ]
}}]
     
     - parameter artistTemplateResource: (body) The artist template resource object (optional)

     - returns: RequestBuilder<TemplateResource> 
     */
    public class func createArtistTemplateWithRequestBuilder(artistTemplateResource artistTemplateResource: TemplateResource? = nil) -> RequestBuilder<TemplateResource> {
        let path = "/media/artists/templates"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = artistTemplateResource?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TemplateResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Removes an artist from the system IF no resources are attached to it
     
     - parameter id: (path) The artist id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteArtist(id id: Int64, completion: ((error: ErrorType?) -> Void)) {
        deleteArtistWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Removes an artist from the system IF no resources are attached to it
     - DELETE /media/artists/{id}
     - OAuth:
       - type: oauth2
       - name: OAuth2
     
     - parameter id: (path) The artist id 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteArtistWithRequestBuilder(id id: Int64) -> RequestBuilder<Void> {
        var path = "/media/artists/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete an artist template
     
     - parameter id: (path) The id of the template 
     - parameter cascade: (query) The value needed to delete used templates (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteArtistTemplate(id id: String, cascade: String? = nil, completion: ((error: ErrorType?) -> Void)) {
        deleteArtistTemplateWithRequestBuilder(id: id, cascade: cascade).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete an artist template
     - DELETE /media/artists/templates/{id}
     - If cascade = 'detach', it will force delete the template even if it's attached to other objects
     - OAuth:
       - type: oauth2
       - name: OAuth2
     
     - parameter id: (path) The id of the template 
     - parameter cascade: (query) The value needed to delete used templates (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func deleteArtistTemplateWithRequestBuilder(id id: String, cascade: String? = nil) -> RequestBuilder<Void> {
        var path = "/media/artists/templates/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "cascade": cascade
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Loads a specific artist details
     
     - parameter id: (path) The artist id 
     - parameter showContributions: (query) The number of contributions to show fetch (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getArtist(id id: Int64, showContributions: Int32? = nil, completion: ((data: ArtistResource?, error: ErrorType?) -> Void)) {
        getArtistWithRequestBuilder(id: id, showContributions: showContributions).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Loads a specific artist details
     - GET /media/artists/{id}
     - examples: [{contentType=application/json, example={
  "contribution_count" : 0,
  "template" : "aeiou",
  "short_description" : "aeiou",
  "born" : "aeiou",
  "died" : "aeiou",
  "long_description" : "aeiou",
  "priority" : 0,
  "contributions" : [ {
    "role" : "aeiou",
    "artist" : {
      "name" : "aeiou",
      "id" : 5
    },
    "media" : ""
  } ],
  "name" : "aeiou",
  "additional_properties" : {
    "key" : {
      "type" : "aeiou"
    }
  },
  "created_date" : 2,
  "id" : 6,
  "updated_date" : 1
}}]
     
     - parameter id: (path) The artist id 
     - parameter showContributions: (query) The number of contributions to show fetch (optional)

     - returns: RequestBuilder<ArtistResource> 
     */
    public class func getArtistWithRequestBuilder(id id: Int64, showContributions: Int32? = nil) -> RequestBuilder<ArtistResource> {
        var path = "/media/artists/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "show_contributions": showContributions?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ArtistResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a single artist template
     
     - parameter id: (path) The id of the template 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getArtistTemplate(id id: String, completion: ((data: TemplateResource?, error: ErrorType?) -> Void)) {
        getArtistTemplateWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a single artist template
     - GET /media/artists/templates/{id}
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "created_date" : 3,
  "id" : "aeiou",
  "updated_date" : 3,
  "properties" : [ {
    "name" : "aeiou",
    "type" : "aeiou",
    "required" : false
  } ]
}}]
     
     - parameter id: (path) The id of the template 

     - returns: RequestBuilder<TemplateResource> 
     */
    public class func getArtistTemplateWithRequestBuilder(id id: String) -> RequestBuilder<TemplateResource> {
        var path = "/media/artists/templates/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TemplateResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     List and search artist templates
     
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getArtistTemplates(size size: Int32? = nil, page: Int32? = nil, order: String? = nil, completion: ((data: PageResourceTemplateResource?, error: ErrorType?) -> Void)) {
        getArtistTemplatesWithRequestBuilder(size: size, page: page, order: order).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List and search artist templates
     - GET /media/artists/templates
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "number" : 3,
  "last" : true,
  "size" : 6,
  "total_elements" : 7,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "aeiou",
    "ascending" : true,
    "direction" : "ASC"
  } ],
  "total_pages" : 3,
  "number_of_elements" : 4,
  "content" : [ {
    "name" : "aeiou",
    "created_date" : 7,
    "id" : "aeiou",
    "updated_date" : 2,
    "properties" : [ {
      "name" : "aeiou",
      "type" : "aeiou",
      "required" : false
    } ]
  } ],
  "first" : true
}}]
     
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)

     - returns: RequestBuilder<PageResourceTemplateResource> 
     */
    public class func getArtistTemplatesWithRequestBuilder(size size: Int32? = nil, page: Int32? = nil, order: String? = nil) -> RequestBuilder<PageResourceTemplateResource> {
        let path = "/media/artists/templates"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON(),
            "order": order
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceTemplateResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Search for artists
     
     - parameter filterArtistsByName: (query) Filter for artists which name *STARTS* with the given string (optional)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getArtists(filterArtistsByName filterArtistsByName: String? = nil, size: Int32? = nil, page: Int32? = nil, order: String? = nil, completion: ((data: PageResourceArtistResource?, error: ErrorType?) -> Void)) {
        getArtistsWithRequestBuilder(filterArtistsByName: filterArtistsByName, size: size, page: page, order: order).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Search for artists
     - GET /media/artists
     - examples: [{contentType=application/json, example={
  "number" : 2,
  "last" : true,
  "size" : 2,
  "total_elements" : 9,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "NATIVE",
    "property" : "aeiou",
    "ascending" : true,
    "direction" : "ASC"
  } ],
  "total_pages" : 4,
  "number_of_elements" : 3,
  "content" : [ {
    "contribution_count" : 9,
    "template" : "aeiou",
    "short_description" : "aeiou",
    "born" : "aeiou",
    "died" : "aeiou",
    "long_description" : "aeiou",
    "priority" : 7,
    "contributions" : [ {
      "role" : "aeiou",
      "artist" : {
        "name" : "aeiou",
        "id" : 0
      },
      "media" : ""
    } ],
    "name" : "aeiou",
    "additional_properties" : {
      "key" : {
        "type" : "aeiou"
      }
    },
    "created_date" : 1,
    "id" : 6,
    "updated_date" : 8
  } ],
  "first" : true
}}]
     
     - parameter filterArtistsByName: (query) Filter for artists which name *STARTS* with the given string (optional)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)

     - returns: RequestBuilder<PageResourceArtistResource> 
     */
    public class func getArtistsWithRequestBuilder(filterArtistsByName filterArtistsByName: String? = nil, size: Int32? = nil, page: Int32? = nil, order: String? = nil) -> RequestBuilder<PageResourceArtistResource> {
        let path = "/media/artists"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter_artists_by_name": filterArtistsByName,
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON(),
            "order": order
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceArtistResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Modifies an artist details
     
     - parameter id: (path) The artist id 
     - parameter artistResource: (body) The new artist (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateArtist(id id: Int64, artistResource: ArtistResource? = nil, completion: ((error: ErrorType?) -> Void)) {
        updateArtistWithRequestBuilder(id: id, artistResource: artistResource).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Modifies an artist details
     - PUT /media/artists/{id}
     - OAuth:
       - type: oauth2
       - name: OAuth2
     
     - parameter id: (path) The artist id 
     - parameter artistResource: (body) The new artist (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func updateArtistWithRequestBuilder(id id: Int64, artistResource: ArtistResource? = nil) -> RequestBuilder<Void> {
        var path = "/media/artists/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = artistResource?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update an artist template
     
     - parameter id: (path) The id of the template 
     - parameter artistTemplateResource: (body) The artist template resource object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateArtistTemplate(id id: String, artistTemplateResource: TemplateResource? = nil, completion: ((data: TemplateResource?, error: ErrorType?) -> Void)) {
        updateArtistTemplateWithRequestBuilder(id: id, artistTemplateResource: artistTemplateResource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update an artist template
     - PUT /media/artists/templates/{id}
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "created_date" : 9,
  "id" : "aeiou",
  "updated_date" : 8,
  "properties" : [ {
    "name" : "aeiou",
    "type" : "aeiou",
    "required" : false
  } ]
}}]
     
     - parameter id: (path) The id of the template 
     - parameter artistTemplateResource: (body) The artist template resource object (optional)

     - returns: RequestBuilder<TemplateResource> 
     */
    public class func updateArtistTemplateWithRequestBuilder(id id: String, artistTemplateResource: TemplateResource? = nil) -> RequestBuilder<TemplateResource> {
        var path = "/media/artists/templates/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = artistTemplateResource?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<TemplateResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
