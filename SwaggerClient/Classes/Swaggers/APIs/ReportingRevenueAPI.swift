//
// ReportingRevenueAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ReportingRevenueAPI: APIBase {
    /**
     Get revenue info by country
     
     - parameter currencyCode: (path) The code for a currency to get sales data for 
     - parameter startDate: (query) The start of the time range to aggregate, unix timestamp in seconds. Default is beginning of time (optional)
     - parameter endDate: (query) The end of the time range to aggregate, unix timestamp in seconds. Default is end of time (optional)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func executiveRevenueCountrySalesUsingGET(currencyCode currencyCode: String, startDate: Int64? = nil, endDate: Int64? = nil, size: Int32? = nil, page: Int32? = nil, completion: ((data: PageRevenueCountryReportResource?, error: ErrorType?) -> Void)) {
        executiveRevenueCountrySalesUsingGETWithRequestBuilder(currencyCode: currencyCode, startDate: startDate, endDate: endDate, size: size, page: page).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get revenue info by country
     - GET /reporting/revenue/countries/{currencyCode}
     - Get basic info about revenue from sales of all types, summed up within a time range and split out by country. Sorted for largest revenue at the top
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{output=none}]
     
     - parameter currencyCode: (path) The code for a currency to get sales data for 
     - parameter startDate: (query) The start of the time range to aggregate, unix timestamp in seconds. Default is beginning of time (optional)
     - parameter endDate: (query) The end of the time range to aggregate, unix timestamp in seconds. Default is end of time (optional)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)

     - returns: RequestBuilder<PageRevenueCountryReportResource> 
     */
    public class func executiveRevenueCountrySalesUsingGETWithRequestBuilder(currencyCode currencyCode: String, startDate: Int64? = nil, endDate: Int64? = nil, size: Int32? = nil, page: Int32? = nil) -> RequestBuilder<PageRevenueCountryReportResource> {
        var path = "/reporting/revenue/countries/{currencyCode}"
        path = path.stringByReplacingOccurrencesOfString("{currency_code}", withString: "\(currencyCode)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "start_date": startDate?.encodeToJSON(),
            "end_date": endDate?.encodeToJSON(),
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageRevenueCountryReportResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get item revenue info
     
     - parameter currencyCode: (path) The code for a currency to get sales data for 
     - parameter startDate: (query) The start of the time range to aggregate, unix timestamp in seconds. Default is beginning of time (optional)
     - parameter endDate: (query) The end of the time range to aggregate, unix timestamp in seconds. Default is end of time (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func executiveRevenueItemSalesUsingGET(currencyCode currencyCode: String, startDate: Int64? = nil, endDate: Int64? = nil, completion: ((data: RevenueReportResource?, error: ErrorType?) -> Void)) {
        executiveRevenueItemSalesUsingGETWithRequestBuilder(currencyCode: currencyCode, startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get item revenue info
     - GET /reporting/revenue/item-sales/{currencyCode}
     - Get basic info about revenue from sales of items and bundles (not subscriptions, shipping, etc), summed up within a time range
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{output=none}]
     
     - parameter currencyCode: (path) The code for a currency to get sales data for 
     - parameter startDate: (query) The start of the time range to aggregate, unix timestamp in seconds. Default is beginning of time (optional)
     - parameter endDate: (query) The end of the time range to aggregate, unix timestamp in seconds. Default is end of time (optional)

     - returns: RequestBuilder<RevenueReportResource> 
     */
    public class func executiveRevenueItemSalesUsingGETWithRequestBuilder(currencyCode currencyCode: String, startDate: Int64? = nil, endDate: Int64? = nil) -> RequestBuilder<RevenueReportResource> {
        var path = "/reporting/revenue/item-sales/{currencyCode}"
        path = path.stringByReplacingOccurrencesOfString("{currency_code}", withString: "\(currencyCode)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "start_date": startDate?.encodeToJSON(),
            "end_date": endDate?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<RevenueReportResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get revenue info by item
     
     - parameter currencyCode: (path) The code for a currency to get sales data for 
     - parameter startDate: (query) The start of the time range to aggregate, unix timestamp in seconds. Default is beginning of time (optional)
     - parameter endDate: (query) The end of the time range to aggregate, unix timestamp in seconds. Default is end of time (optional)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func executiveRevenueProductSalesUsingGET(currencyCode currencyCode: String, startDate: Int64? = nil, endDate: Int64? = nil, size: Int32? = nil, page: Int32? = nil, completion: ((data: PageRevenueProductReportResource?, error: ErrorType?) -> Void)) {
        executiveRevenueProductSalesUsingGETWithRequestBuilder(currencyCode: currencyCode, startDate: startDate, endDate: endDate, size: size, page: page).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get revenue info by item
     - GET /reporting/revenue/products/{currencyCode}
     - Get basic info about revenue from sales of all types, summed up within a time range and split out by specific item. Sorted for largest revenue at the top
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{output=none}]
     
     - parameter currencyCode: (path) The code for a currency to get sales data for 
     - parameter startDate: (query) The start of the time range to aggregate, unix timestamp in seconds. Default is beginning of time (optional)
     - parameter endDate: (query) The end of the time range to aggregate, unix timestamp in seconds. Default is end of time (optional)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)

     - returns: RequestBuilder<PageRevenueProductReportResource> 
     */
    public class func executiveRevenueProductSalesUsingGETWithRequestBuilder(currencyCode currencyCode: String, startDate: Int64? = nil, endDate: Int64? = nil, size: Int32? = nil, page: Int32? = nil) -> RequestBuilder<PageRevenueProductReportResource> {
        var path = "/reporting/revenue/products/{currencyCode}"
        path = path.stringByReplacingOccurrencesOfString("{currency_code}", withString: "\(currencyCode)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "start_date": startDate?.encodeToJSON(),
            "end_date": endDate?.encodeToJSON(),
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageRevenueProductReportResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get refund revenue info
     
     - parameter currencyCode: (path) The code for a currency to get refund data for 
     - parameter startDate: (query) The start of the time range to aggregate, unix timestamp in seconds. Default is beginning of time (optional)
     - parameter endDate: (query) The end of the time range to aggregate, unix timestamp in seconds. Default is end of time (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func executiveRevenueRefundsUsingGET(currencyCode currencyCode: String, startDate: Int64? = nil, endDate: Int64? = nil, completion: ((data: RevenueReportResource?, error: ErrorType?) -> Void)) {
        executiveRevenueRefundsUsingGETWithRequestBuilder(currencyCode: currencyCode, startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get refund revenue info
     - GET /reporting/revenue/refunds/{currencyCode}
     - Get basic info about revenue loss from refunds (for all item types), summed up within a time range.
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{output=none}]
     
     - parameter currencyCode: (path) The code for a currency to get refund data for 
     - parameter startDate: (query) The start of the time range to aggregate, unix timestamp in seconds. Default is beginning of time (optional)
     - parameter endDate: (query) The end of the time range to aggregate, unix timestamp in seconds. Default is end of time (optional)

     - returns: RequestBuilder<RevenueReportResource> 
     */
    public class func executiveRevenueRefundsUsingGETWithRequestBuilder(currencyCode currencyCode: String, startDate: Int64? = nil, endDate: Int64? = nil) -> RequestBuilder<RevenueReportResource> {
        var path = "/reporting/revenue/refunds/{currencyCode}"
        path = path.stringByReplacingOccurrencesOfString("{currency_code}", withString: "\(currencyCode)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "start_date": startDate?.encodeToJSON(),
            "end_date": endDate?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<RevenueReportResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get subscription revenue info
     
     - parameter currencyCode: (path) The code for a currency to get sales data for 
     - parameter startDate: (query) The start of the time range to aggregate, unix timestamp in seconds. Default is beginning of time (optional)
     - parameter endDate: (query) The end of the time range to aggregate, unix timestamp in seconds. Default is end of time (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func executiveRevenueSubscriptionSalesUsingGET(currencyCode currencyCode: String, startDate: Int64? = nil, endDate: Int64? = nil, completion: ((data: RevenueReportResource?, error: ErrorType?) -> Void)) {
        executiveRevenueSubscriptionSalesUsingGETWithRequestBuilder(currencyCode: currencyCode, startDate: startDate, endDate: endDate).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get subscription revenue info
     - GET /reporting/revenue/subscription-sales/{currencyCode}
     - Get basic info about revenue from sales of new subscriptions as well as recurring payemnts, summed up within a time range
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{output=none}]
     
     - parameter currencyCode: (path) The code for a currency to get sales data for 
     - parameter startDate: (query) The start of the time range to aggregate, unix timestamp in seconds. Default is beginning of time (optional)
     - parameter endDate: (query) The end of the time range to aggregate, unix timestamp in seconds. Default is end of time (optional)

     - returns: RequestBuilder<RevenueReportResource> 
     */
    public class func executiveRevenueSubscriptionSalesUsingGETWithRequestBuilder(currencyCode currencyCode: String, startDate: Int64? = nil, endDate: Int64? = nil) -> RequestBuilder<RevenueReportResource> {
        var path = "/reporting/revenue/subscription-sales/{currencyCode}"
        path = path.stringByReplacingOccurrencesOfString("{currency_code}", withString: "\(currencyCode)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "start_date": startDate?.encodeToJSON(),
            "end_date": endDate?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<RevenueReportResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
