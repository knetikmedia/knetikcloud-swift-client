//
// ReportingUsageAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ReportingUsageAPI: APIBase {
    /**
     Returns aggregated endpoint usage information by the day
     
     - parameter startDate: (query) The beginning of the range being requested, unix timestamp in seconds 
     - parameter endDate: (query) The ending of the range being requested, unix timestamp in seconds 
     - parameter combineEndpoints: (query) Whether to combine counts from different endpoint. Removes the url and method from the result object (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getUsageByDayUsingGET(startDate startDate: Int64, endDate: Int64, combineEndpoints: Bool? = nil, size: Int32? = nil, page: Int32? = nil, completion: ((data: PageResourceUsageInfo?, error: ErrorType?) -> Void)) {
        getUsageByDayUsingGETWithRequestBuilder(startDate: startDate, endDate: endDate, combineEndpoints: combineEndpoints, size: size, page: page).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Returns aggregated endpoint usage information by the day
     - GET /reporting/usage/day
     - OAuth:
       - type: oauth2
       - name: knetik_oauth
     - examples: [{contentType=application/json, example={
  "number" : 123,
  "last" : true,
  "size" : 123,
  "total_elements" : 123456789,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "aeiou",
    "property" : "aeiou",
    "ascending" : true,
    "direction" : "aeiou"
  } ],
  "total_pages" : 123,
  "number_of_elements" : 123,
  "content" : [ {
    "date" : 123456789,
    "method" : "aeiou",
    "count" : 123456789,
    "url" : "aeiou"
  } ],
  "first" : true
}}]
     
     - parameter startDate: (query) The beginning of the range being requested, unix timestamp in seconds 
     - parameter endDate: (query) The ending of the range being requested, unix timestamp in seconds 
     - parameter combineEndpoints: (query) Whether to combine counts from different endpoint. Removes the url and method from the result object (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)

     - returns: RequestBuilder<PageResourceUsageInfo> 
     */
    public class func getUsageByDayUsingGETWithRequestBuilder(startDate startDate: Int64, endDate: Int64, combineEndpoints: Bool? = nil, size: Int32? = nil, page: Int32? = nil) -> RequestBuilder<PageResourceUsageInfo> {
        let path = "/reporting/usage/day"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "start_date": startDate.encodeToJSON(),
            "end_date": endDate.encodeToJSON(),
            "combine_endpoints": combineEndpoints,
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceUsageInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Returns aggregated endpoint usage information by hour
     
     - parameter startDate: (query) The beginning of the range being requested, unix timestamp in seconds 
     - parameter endDate: (query) The ending of the range being requested, unix timestamp in seconds 
     - parameter combineEndpoints: (query) Whether to combine counts from different endpoint. Removes the url and method from the result object (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getUsageByHourUsingGET(startDate startDate: Int64, endDate: Int64, combineEndpoints: Bool? = nil, size: Int32? = nil, page: Int32? = nil, completion: ((data: PageResourceUsageInfo?, error: ErrorType?) -> Void)) {
        getUsageByHourUsingGETWithRequestBuilder(startDate: startDate, endDate: endDate, combineEndpoints: combineEndpoints, size: size, page: page).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Returns aggregated endpoint usage information by hour
     - GET /reporting/usage/hour
     - OAuth:
       - type: oauth2
       - name: knetik_oauth
     - examples: [{contentType=application/json, example={
  "number" : 123,
  "last" : true,
  "size" : 123,
  "total_elements" : 123456789,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "aeiou",
    "property" : "aeiou",
    "ascending" : true,
    "direction" : "aeiou"
  } ],
  "total_pages" : 123,
  "number_of_elements" : 123,
  "content" : [ {
    "date" : 123456789,
    "method" : "aeiou",
    "count" : 123456789,
    "url" : "aeiou"
  } ],
  "first" : true
}}]
     
     - parameter startDate: (query) The beginning of the range being requested, unix timestamp in seconds 
     - parameter endDate: (query) The ending of the range being requested, unix timestamp in seconds 
     - parameter combineEndpoints: (query) Whether to combine counts from different endpoint. Removes the url and method from the result object (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)

     - returns: RequestBuilder<PageResourceUsageInfo> 
     */
    public class func getUsageByHourUsingGETWithRequestBuilder(startDate startDate: Int64, endDate: Int64, combineEndpoints: Bool? = nil, size: Int32? = nil, page: Int32? = nil) -> RequestBuilder<PageResourceUsageInfo> {
        let path = "/reporting/usage/hour"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "start_date": startDate.encodeToJSON(),
            "end_date": endDate.encodeToJSON(),
            "combine_endpoints": combineEndpoints,
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceUsageInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Returns aggregated endpoint usage information by minute
     
     - parameter startDate: (query) The beginning of the range being requested, unix timestamp in seconds 
     - parameter endDate: (query) The ending of the range being requested, unix timestamp in seconds 
     - parameter combineEndpoints: (query) Whether to combine counts from different endpoint. Removes the url and method from the result object (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getUsageByMinuteUsingGET(startDate startDate: Int64, endDate: Int64, combineEndpoints: Bool? = nil, size: Int32? = nil, page: Int32? = nil, completion: ((data: PageResourceUsageInfo?, error: ErrorType?) -> Void)) {
        getUsageByMinuteUsingGETWithRequestBuilder(startDate: startDate, endDate: endDate, combineEndpoints: combineEndpoints, size: size, page: page).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Returns aggregated endpoint usage information by minute
     - GET /reporting/usage/minute
     - OAuth:
       - type: oauth2
       - name: knetik_oauth
     - examples: [{contentType=application/json, example={
  "number" : 123,
  "last" : true,
  "size" : 123,
  "total_elements" : 123456789,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "aeiou",
    "property" : "aeiou",
    "ascending" : true,
    "direction" : "aeiou"
  } ],
  "total_pages" : 123,
  "number_of_elements" : 123,
  "content" : [ {
    "date" : 123456789,
    "method" : "aeiou",
    "count" : 123456789,
    "url" : "aeiou"
  } ],
  "first" : true
}}]
     
     - parameter startDate: (query) The beginning of the range being requested, unix timestamp in seconds 
     - parameter endDate: (query) The ending of the range being requested, unix timestamp in seconds 
     - parameter combineEndpoints: (query) Whether to combine counts from different endpoint. Removes the url and method from the result object (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)

     - returns: RequestBuilder<PageResourceUsageInfo> 
     */
    public class func getUsageByMinuteUsingGETWithRequestBuilder(startDate startDate: Int64, endDate: Int64, combineEndpoints: Bool? = nil, size: Int32? = nil, page: Int32? = nil) -> RequestBuilder<PageResourceUsageInfo> {
        let path = "/reporting/usage/minute"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "start_date": startDate.encodeToJSON(),
            "end_date": endDate.encodeToJSON(),
            "combine_endpoints": combineEndpoints,
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceUsageInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Returns aggregated endpoint usage information by month
     
     - parameter startDate: (query) The beginning of the range being requested, unix timestamp in seconds 
     - parameter endDate: (query) The ending of the range being requested, unix timestamp in seconds 
     - parameter combineEndpoints: (query) Whether to combine counts from different endpoint. Removes the url and method from the result object (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getUsageByMonthUsingGET(startDate startDate: Int64, endDate: Int64, combineEndpoints: Bool? = nil, size: Int32? = nil, page: Int32? = nil, completion: ((data: PageResourceUsageInfo?, error: ErrorType?) -> Void)) {
        getUsageByMonthUsingGETWithRequestBuilder(startDate: startDate, endDate: endDate, combineEndpoints: combineEndpoints, size: size, page: page).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Returns aggregated endpoint usage information by month
     - GET /reporting/usage/month
     - OAuth:
       - type: oauth2
       - name: knetik_oauth
     - examples: [{contentType=application/json, example={
  "number" : 123,
  "last" : true,
  "size" : 123,
  "total_elements" : 123456789,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "aeiou",
    "property" : "aeiou",
    "ascending" : true,
    "direction" : "aeiou"
  } ],
  "total_pages" : 123,
  "number_of_elements" : 123,
  "content" : [ {
    "date" : 123456789,
    "method" : "aeiou",
    "count" : 123456789,
    "url" : "aeiou"
  } ],
  "first" : true
}}]
     
     - parameter startDate: (query) The beginning of the range being requested, unix timestamp in seconds 
     - parameter endDate: (query) The ending of the range being requested, unix timestamp in seconds 
     - parameter combineEndpoints: (query) Whether to combine counts from different endpoint. Removes the url and method from the result object (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)

     - returns: RequestBuilder<PageResourceUsageInfo> 
     */
    public class func getUsageByMonthUsingGETWithRequestBuilder(startDate startDate: Int64, endDate: Int64, combineEndpoints: Bool? = nil, size: Int32? = nil, page: Int32? = nil) -> RequestBuilder<PageResourceUsageInfo> {
        let path = "/reporting/usage/month"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "start_date": startDate.encodeToJSON(),
            "end_date": endDate.encodeToJSON(),
            "combine_endpoints": combineEndpoints,
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceUsageInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Returns aggregated endpoint usage information by year
     
     - parameter startDate: (query) The beginning of the range being requested, unix timestamp in seconds 
     - parameter endDate: (query) The ending of the range being requested, unix timestamp in seconds 
     - parameter combineEndpoints: (query) Whether to combine counts from different endpoint. Removes the url and method from the result object (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getUsageByYearUsingGET(startDate startDate: Int64, endDate: Int64, combineEndpoints: Bool? = nil, size: Int32? = nil, page: Int32? = nil, completion: ((data: PageResourceUsageInfo?, error: ErrorType?) -> Void)) {
        getUsageByYearUsingGETWithRequestBuilder(startDate: startDate, endDate: endDate, combineEndpoints: combineEndpoints, size: size, page: page).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Returns aggregated endpoint usage information by year
     - GET /reporting/usage/year
     - OAuth:
       - type: oauth2
       - name: knetik_oauth
     - examples: [{contentType=application/json, example={
  "number" : 123,
  "last" : true,
  "size" : 123,
  "total_elements" : 123456789,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "aeiou",
    "property" : "aeiou",
    "ascending" : true,
    "direction" : "aeiou"
  } ],
  "total_pages" : 123,
  "number_of_elements" : 123,
  "content" : [ {
    "date" : 123456789,
    "method" : "aeiou",
    "count" : 123456789,
    "url" : "aeiou"
  } ],
  "first" : true
}}]
     
     - parameter startDate: (query) The beginning of the range being requested, unix timestamp in seconds 
     - parameter endDate: (query) The ending of the range being requested, unix timestamp in seconds 
     - parameter combineEndpoints: (query) Whether to combine counts from different endpoint. Removes the url and method from the result object (optional, default to false)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)

     - returns: RequestBuilder<PageResourceUsageInfo> 
     */
    public class func getUsageByYearUsingGETWithRequestBuilder(startDate startDate: Int64, endDate: Int64, combineEndpoints: Bool? = nil, size: Int32? = nil, page: Int32? = nil) -> RequestBuilder<PageResourceUsageInfo> {
        let path = "/reporting/usage/year"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "start_date": startDate.encodeToJSON(),
            "end_date": endDate.encodeToJSON(),
            "combine_endpoints": combineEndpoints,
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceUsageInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
