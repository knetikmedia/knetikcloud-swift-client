//
// StoreVendorsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class StoreVendorsAPI: APIBase {
    /**
     Create a vendor
     
     - parameter vendor: (body) The vendor (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createVendor(vendor vendor: VendorResource? = nil, completion: ((data: VendorResource?, error: ErrorType?) -> Void)) {
        createVendorWithRequestBuilder(vendor: vendor).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a vendor
     - POST /vendors
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "template" : "aeiou",
  "primary_contact_email" : "aeiou",
  "image_url" : "aeiou",
  "active" : false,
  "description" : "aeiou",
  "primary_contact_name" : "aeiou",
  "primary_contact_phone" : "aeiou",
  "update_date" : 123456789,
  "url" : "aeiou",
  "support_email" : "aeiou",
  "name" : "aeiou",
  "sales_email" : "aeiou",
  "additional_properties" : {
    "key" : {
      "type" : "aeiou"
    }
  },
  "id" : 123,
  "create_date" : 123456789,
  "manual_approval" : false
}}]
     
     - parameter vendor: (body) The vendor (optional)

     - returns: RequestBuilder<VendorResource> 
     */
    public class func createVendorWithRequestBuilder(vendor vendor: VendorResource? = nil) -> RequestBuilder<VendorResource> {
        let path = "/vendors"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = vendor?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<VendorResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Create a vendor template
     
     - parameter vendorTemplateResource: (body) The new vendor template (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createVendorTemplate(vendorTemplateResource vendorTemplateResource: ItemTemplateResource? = nil, completion: ((data: ItemTemplateResource?, error: ErrorType?) -> Void)) {
        createVendorTemplateWithRequestBuilder(vendorTemplateResource: vendorTemplateResource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create a vendor template
     - POST /vendors/templates
     - Vendor Templates define a type of vendor and the properties they have.
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "behaviors" : [ {
    "behavior" : {
      "type_hint" : "aeiou"
    },
    "modifiable" : false,
    "required" : false
  } ],
  "name" : "aeiou",
  "created_date" : 123456789,
  "id" : "aeiou",
  "updated_date" : 123456789,
  "properties" : [ {
    "name" : "aeiou",
    "type" : "aeiou",
    "required" : false
  } ]
}}]
     
     - parameter vendorTemplateResource: (body) The new vendor template (optional)

     - returns: RequestBuilder<ItemTemplateResource> 
     */
    public class func createVendorTemplateWithRequestBuilder(vendorTemplateResource vendorTemplateResource: ItemTemplateResource? = nil) -> RequestBuilder<ItemTemplateResource> {
        let path = "/vendors/templates"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = vendorTemplateResource?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ItemTemplateResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a vendor
     
     - parameter id: (path) The id of the vendor 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteVendor(id id: Int32, completion: ((error: ErrorType?) -> Void)) {
        deleteVendorWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a vendor
     - DELETE /vendors/{id}
     - OAuth:
       - type: oauth2
       - name: OAuth2
     
     - parameter id: (path) The id of the vendor 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteVendorWithRequestBuilder(id id: Int32) -> RequestBuilder<Void> {
        var path = "/vendors/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete a vendor template
     
     - parameter id: (path) The id of the template 
     - parameter cascade: (query) force deleting the template if it&#39;s attached to other objects, cascade &#x3D; detach (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteVendorTemplate(id id: String, cascade: String? = nil, completion: ((error: ErrorType?) -> Void)) {
        deleteVendorTemplateWithRequestBuilder(id: id, cascade: cascade).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Delete a vendor template
     - DELETE /vendors/templates/{id}
     - OAuth:
       - type: oauth2
       - name: OAuth2
     
     - parameter id: (path) The id of the template 
     - parameter cascade: (query) force deleting the template if it&#39;s attached to other objects, cascade &#x3D; detach (optional)

     - returns: RequestBuilder<Void> 
     */
    public class func deleteVendorTemplateWithRequestBuilder(id id: String, cascade: String? = nil) -> RequestBuilder<Void> {
        var path = "/vendors/templates/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "cascade": cascade
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get a single vendor
     
     - parameter id: (path) The id of the vendor 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getVendor(id id: Int32, completion: ((data: VendorResource?, error: ErrorType?) -> Void)) {
        getVendorWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a single vendor
     - GET /vendors/{id}
     - examples: [{contentType=application/json, example={
  "template" : "aeiou",
  "primary_contact_email" : "aeiou",
  "image_url" : "aeiou",
  "active" : false,
  "description" : "aeiou",
  "primary_contact_name" : "aeiou",
  "primary_contact_phone" : "aeiou",
  "update_date" : 123456789,
  "url" : "aeiou",
  "support_email" : "aeiou",
  "name" : "aeiou",
  "sales_email" : "aeiou",
  "additional_properties" : {
    "key" : {
      "type" : "aeiou"
    }
  },
  "id" : 123,
  "create_date" : 123456789,
  "manual_approval" : false
}}]
     
     - parameter id: (path) The id of the vendor 

     - returns: RequestBuilder<VendorResource> 
     */
    public class func getVendorWithRequestBuilder(id id: Int32) -> RequestBuilder<VendorResource> {
        var path = "/vendors/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<VendorResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a single vendor template
     
     - parameter id: (path) The id of the template 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getVendorTemplate(id id: String, completion: ((data: ItemTemplateResource?, error: ErrorType?) -> Void)) {
        getVendorTemplateWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a single vendor template
     - GET /vendors/templates/{id}
     - Vendor Templates define a type of vendor and the properties they have.
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "behaviors" : [ {
    "behavior" : {
      "type_hint" : "aeiou"
    },
    "modifiable" : false,
    "required" : false
  } ],
  "name" : "aeiou",
  "created_date" : 123456789,
  "id" : "aeiou",
  "updated_date" : 123456789,
  "properties" : [ {
    "name" : "aeiou",
    "type" : "aeiou",
    "required" : false
  } ]
}}]
     
     - parameter id: (path) The id of the template 

     - returns: RequestBuilder<ItemTemplateResource> 
     */
    public class func getVendorTemplateWithRequestBuilder(id id: String) -> RequestBuilder<ItemTemplateResource> {
        var path = "/vendors/templates/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ItemTemplateResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     List and search vendor templates
     
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to 1)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getVendorTemplates(size size: Int32? = nil, page: Int32? = nil, order: String? = nil, completion: ((data: PageResourceItemTemplateResource?, error: ErrorType?) -> Void)) {
        getVendorTemplatesWithRequestBuilder(size: size, page: page, order: order).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List and search vendor templates
     - GET /vendors/templates
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "number" : 123,
  "last" : true,
  "size" : 123,
  "total_elements" : 123456789,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "aeiou",
    "property" : "aeiou",
    "ascending" : true,
    "direction" : "aeiou"
  } ],
  "total_pages" : 123,
  "number_of_elements" : 123,
  "content" : [ {
    "behaviors" : [ {
      "behavior" : {
        "type_hint" : "aeiou"
      },
      "modifiable" : false,
      "required" : false
    } ],
    "name" : "aeiou",
    "created_date" : 123456789,
    "id" : "aeiou",
    "updated_date" : 123456789,
    "properties" : [ {
      "name" : "aeiou",
      "type" : "aeiou",
      "required" : false
    } ]
  } ],
  "first" : true
}}]
     
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to 1)

     - returns: RequestBuilder<PageResourceItemTemplateResource> 
     */
    public class func getVendorTemplatesWithRequestBuilder(size size: Int32? = nil, page: Int32? = nil, order: String? = nil) -> RequestBuilder<PageResourceItemTemplateResource> {
        let path = "/vendors/templates"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON(),
            "order": order
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceItemTemplateResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     List and search vendors
     
     - parameter filterName: (query) Filters vendors by name starting with the text provided in the filter (optional)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getVendors(filterName filterName: String? = nil, size: Int32? = nil, page: Int32? = nil, order: String? = nil, completion: ((data: PageResourceVendorResource?, error: ErrorType?) -> Void)) {
        getVendorsWithRequestBuilder(filterName: filterName, size: size, page: page, order: order).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     List and search vendors
     - GET /vendors
     - examples: [{contentType=application/json, example={
  "number" : 123,
  "last" : true,
  "size" : 123,
  "total_elements" : 123456789,
  "sort" : [ {
    "ignore_case" : true,
    "null_handling" : "aeiou",
    "property" : "aeiou",
    "ascending" : true,
    "direction" : "aeiou"
  } ],
  "total_pages" : 123,
  "number_of_elements" : 123,
  "content" : [ {
    "template" : "aeiou",
    "primary_contact_email" : "aeiou",
    "image_url" : "aeiou",
    "active" : false,
    "description" : "aeiou",
    "primary_contact_name" : "aeiou",
    "primary_contact_phone" : "aeiou",
    "update_date" : 123456789,
    "url" : "aeiou",
    "support_email" : "aeiou",
    "name" : "aeiou",
    "sales_email" : "aeiou",
    "additional_properties" : {
      "key" : {
        "type" : "aeiou"
      }
    },
    "id" : 123,
    "create_date" : 123456789,
    "manual_approval" : false
  } ],
  "first" : true
}}]
     
     - parameter filterName: (query) Filters vendors by name starting with the text provided in the filter (optional)
     - parameter size: (query) The number of objects returned per page (optional, default to 25)
     - parameter page: (query) The number of the page returned, starting with 1 (optional, default to 1)
     - parameter order: (query) A comma separated list of sorting requirements in priority order, each entry matching PROPERTY_NAME:[ASC|DESC] (optional, default to id:ASC)

     - returns: RequestBuilder<PageResourceVendorResource> 
     */
    public class func getVendorsWithRequestBuilder(filterName filterName: String? = nil, size: Int32? = nil, page: Int32? = nil, order: String? = nil) -> RequestBuilder<PageResourceVendorResource> {
        let path = "/vendors"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filter_name": filterName,
            "size": size?.encodeToJSON(),
            "page": page?.encodeToJSON(),
            "order": order
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PageResourceVendorResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Update a vendor
     
     - parameter id: (path) The id of the vendor 
     - parameter vendor: (body) The vendor (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateVendor(id id: Int32, vendor: VendorResource? = nil, completion: ((data: VendorResource?, error: ErrorType?) -> Void)) {
        updateVendorWithRequestBuilder(id: id, vendor: vendor).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a vendor
     - PUT /vendors/{id}
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "template" : "aeiou",
  "primary_contact_email" : "aeiou",
  "image_url" : "aeiou",
  "active" : false,
  "description" : "aeiou",
  "primary_contact_name" : "aeiou",
  "primary_contact_phone" : "aeiou",
  "update_date" : 123456789,
  "url" : "aeiou",
  "support_email" : "aeiou",
  "name" : "aeiou",
  "sales_email" : "aeiou",
  "additional_properties" : {
    "key" : {
      "type" : "aeiou"
    }
  },
  "id" : 123,
  "create_date" : 123456789,
  "manual_approval" : false
}}]
     
     - parameter id: (path) The id of the vendor 
     - parameter vendor: (body) The vendor (optional)

     - returns: RequestBuilder<VendorResource> 
     */
    public class func updateVendorWithRequestBuilder(id id: Int32, vendor: VendorResource? = nil) -> RequestBuilder<VendorResource> {
        var path = "/vendors/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = vendor?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<VendorResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update a vendor template
     
     - parameter id: (path) The id of the template 
     - parameter vendorTemplateResource: (body) The vendor template resource object (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateVendorTemplate(id id: String, vendorTemplateResource: ItemTemplateResource? = nil, completion: ((data: ItemTemplateResource?, error: ErrorType?) -> Void)) {
        updateVendorTemplateWithRequestBuilder(id: id, vendorTemplateResource: vendorTemplateResource).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update a vendor template
     - PUT /vendors/templates/{id}
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - examples: [{contentType=application/json, example={
  "behaviors" : [ {
    "behavior" : {
      "type_hint" : "aeiou"
    },
    "modifiable" : false,
    "required" : false
  } ],
  "name" : "aeiou",
  "created_date" : 123456789,
  "id" : "aeiou",
  "updated_date" : 123456789,
  "properties" : [ {
    "name" : "aeiou",
    "type" : "aeiou",
    "required" : false
  } ]
}}]
     
     - parameter id: (path) The id of the template 
     - parameter vendorTemplateResource: (body) The vendor template resource object (optional)

     - returns: RequestBuilder<ItemTemplateResource> 
     */
    public class func updateVendorTemplateWithRequestBuilder(id id: String, vendorTemplateResource: ItemTemplateResource? = nil) -> RequestBuilder<ItemTemplateResource> {
        var path = "/vendors/templates/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = vendorTemplateResource?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ItemTemplateResource>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
